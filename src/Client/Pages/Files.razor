@page "/files/{*Path}"
@using WebServerManager.Client.Services
@using Microsoft.AspNetCore.Components.WebAssembly.Hosting
@using System.Globalization
@inherits WebServerManager.Client.Components.PathComponentBase
@inject CredentialService CredentialService
@inject NavigationManager NavigationManager
@inject FileSystemService FileSystem
@inject IDialogService DialogService
@inject IWebAssemblyHostEnvironment HostEnvironment
@inject HttpClient Http
@inject IJSRuntime Js
@inject ISnackbar Snackbar

<PageTitle>@Path</PageTitle>

<MudPaper Elevation="3" Class="mb-4 mud-dark">
	<MudStack Row="true" Justify="Justify.SpaceBetween">
		<MudBreadcrumbs Items="PathItems"/>
		<MudStack Row="true" Justify="Justify.FlexEnd" Class="align-center">
			@if (BackgroundLoadingFiles)
			{
				<MudProgressCircular Color="Color.Success" Class="ms-n1 mr-3" Size="Size.Small" Indeterminate="true"/>
			}
			else if(FileEntries != null)
			{
				<MudIconButton Color="Color.Success" Size="Size.Medium" Icon="@Icons.Material.Filled.Cached"
				               OnClick="async () => await UpdateFiles()"/>
			}
			<MudFileUpload T="IBrowserFile" OnFilesChanged="UploadFiles" Class="mt-0">
				<ButtonTemplate>
					<MudButtonGroup OverrideStyles="false" Class="align-center mr-3" Style="white-space: nowrap">
						<MudButton Color="Color.Default" Variant="Variant.Outlined" Size="Size.Medium" OnClick="CreateDirectory">Create Directory</MudButton>
						<MudButton HtmlTag="label"
						           Variant="Variant.Filled"
						           Color="Color.Primary"
						           for="@context">
							Upload
						</MudButton>
						<MudButton Color="Color.Primary" Variant="Variant.Filled" Size="Size.Medium" OnClick="CreateFile">New File</MudButton>
					</MudButtonGroup>
				</ButtonTemplate>
			</MudFileUpload>
		</MudStack>
	</MudStack>
</MudPaper>

@if (FileEntries != null)
{
	<MudList Clickable="true" Dense="true" DisablePadding="true">
		<Virtualize Context="file" Items="FileEntries" OverscanCount="6">
			<MudPaper Elevation="1" Class="mb-1">
				<MudListItem Href="@(GetLinkFOrFileEntry(file))">
					<MudStack Row="true" Justify="Justify.SpaceBetween">
						<MudStack Row="true">
							<MudIcon Icon="@(file.IsFolder ? Icons.Custom.Uncategorized.Folder : Icons.Custom.FileFormats.FileDocument)"/>
							<MudText>@file.Name</MudText>
						</MudStack>
						<MudStack Row="true">
							@if (!file.IsFolder)
							{
								<MudText>
									@GetFileSizeStr(file.Size)
								</MudText>
							}
							<MudText Style="width: 300px" Align="Align.End">
								@file.LastWrite.ToString("dd MMM, yyy h:mmtt")
							</MudText>
							<MudMenu Icon="@Icons.Material.Filled.MoreHoriz" Dense="true" Size="Size.Small">
								<MudMenuItem OnClick="async () => await RenameFile(file)">
									<MudStack Row="true" Justify="Justify.FlexStart" Class="align-center">
										<MudIcon Icon="@Icons.Material.Filled.Edit" Size="Size.Small"/>
										<MudText>Rename</MudText>
									</MudStack>
								</MudMenuItem>
								@if(!file.IsFolder)
								{
									<MudMenuItem OnClick="async ()=> await DownloadFile(file)">
										<MudStack Row="true" Justify="Justify.FlexStart" Class="align-center">
											<MudIcon Icon="@Icons.Material.Filled.Download" Size="Size.Small"/>
											<MudText>Download</MudText>
										</MudStack>
									</MudMenuItem>
								}
								<MudMenuItem OnClick="async () => await DeleteFile(file)">
									<MudStack Row="true" Justify="Justify.FlexStart" Class="align-center">
										<MudIcon Icon="@Icons.Material.Filled.Delete" Size="Size.Small"/>
										<MudText>Delete</MudText>
									</MudStack>
								</MudMenuItem>
							</MudMenu>
						</MudStack>
					</MudStack>
				</MudListItem>
			</MudPaper>
		</Virtualize>
	</MudList>
	
}
else
{
	<MudStack Row="true" Justify="Justify.Center">
		<MudProgressCircular Class="ms-n1" Size="Size.Large" Indeterminate="true"/>
	</MudStack>
}

<MudMessageBox @ref="Mbox" Title="Warning" CancelText="Cancel" Style="margin-top: 100px">
	<MessageContent>
		Deleting can <b>NOT</b> be undone!
	</MessageContent>
	<YesButton>
		<MudButton Variant="Variant.Filled" Color="Color.Error" StartIcon="@Icons.Material.Filled.DeleteForever">Delete!</MudButton>
	</YesButton>
</MudMessageBox>

<MudOverlay Visible="_uploading" DarkBackground="true">
	<MudStack Row="false" Justify="Justify.Center" Class="align-center">
		<MudProgressCircular Color="Color.Info" Class="ms-n1 mr-3" Size="Size.Large" Value="_percentage" Indeterminate="@(_uploaded==_toUpload)"/>
		@if (_uploaded == _toUpload)
		{
			<MudText>Transfering with SFTP please wait</MudText>
		}
		else
		{
			<MudText>Procesing @(_uploaded / 1024)KB / @(_toUpload / 1024)KB</MudText>
		}
	</MudStack>
	
</MudOverlay>